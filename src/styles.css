* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: sans-serif;
    .border: 1px solid limegreen;
}

body {
    height: 100vh;
    background-color: #ffffff;
}

.container {
    height: 100%;
    display: flex;
    flex-direction: column;
}

.header {
    height: 46px;
    grid-area: header;
    background-color: #db5244;
}

.main {
    grid-area: main;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 4.75fr;
    grid-template-areas:
        'sidebar workspace';
}

.sidebar {
    grid-area: sidebar;
    background-color: #fafafa;
}

.workspace {
    grid-area: workspace;
    padding: 2.25em 20.5em;
    display: flex;
    flex-direction: column;
}

.workspaceHeader {
    display: flex;
    align-items: flex-end;
    gap: 0.4em;
    margin-bottom: 1em;
}

.today {
    font-weight: bold;
    font-size: 20px;
    position: relative;
    top: 2px;
}

.date {
    color: #a2a3a5;
    font-size: 12px;
}

.newTaskDiv {
    display: flex;
    gap: 0.7em;
    user-select: none;
}

.newTaskIconDiv {
    height: 16px;
    width: 16px;
    border-radius: 50%;
}

.newTaskIcon {
    height: 100%;
    scale: 135%;
}

.addTask {
    align-self: center;
    color: #817d8c;
    font-size: 14px;
}

.newTaskDiv:hover .addTask {
    color: #db4c3d;
}

.newTaskDiv:hover {
    cursor: pointer;
}

.newTaskForm {
    border: 1px solid grey;
    border-radius: 10px;
    height: fit-content;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0.5em 0.6em;
    gap: 0.5em;
}

.takeNameInput {
    width: 100%;

    border: none;
    outline: none;
    font-size: 15px;
    font-weight: bold;
}

.takeNameInput::placeholder,
.taskDescriptionInput::placeholder {
    color: rgb(128, 128, 128, 0.7);
}

.taskDescriptionInput {
    width: 100%;
    border: none;
    outline: none;
    font-size: 12px;
}

.taskOptionDiv {
    width: 100%;
    display: flex;
    gap: 0.5em;
}

.prioritySelect {
    appearance: none;
    outline: none;
    padding: 5px 20px;
    background-color: inherit;
    border-radius: 5px;
    border: 1px solid rgb(128, 128, 128, 0.4);
}

.prioritySelect:hover {
    background-color: rgba(128, 128, 128, 0.1);
}

.priorityOption:hover {
    box-shadow: 0 0 10px 100px yellow inset;
}

.dateInput {
    border-radius: 5px;
    border: 1px solid rgb(128, 128, 128, 0.4);
    padding: 0 10px;
    user-select: none;
    outline: none;
}

.dateInput:hover {
    background-color: rgba(128, 128, 128, 0.1);
}

.projectList {
    appearance: none;
    outline: none;
    padding: 5px 20px;
    background-color: inherit;
    border-radius: 5px;
    border: 1px solid rgb(128, 128, 128, 0.4);
}

.taskSubmitDiv {
    display: flex;
    justify-content: flex-end;
    width: 100%;
    height: 100%;
    gap: 1em;
}

.taskSubmitDiv button {
    border: none;
    outline: none;
    appearance: none;
    padding: 5px 20px;
    width: 100px;
    border-radius: 5px;
}

.submitTask {
    background-color: rgb(221, 74, 68);
    color: white;
    font-weight: bold;
}

.submitTask:hover {
    background-color: rgb(196, 63, 59)
}

.cancel:hover {
    background-color: rgb(223, 223, 223);
}

.taskItemDiv {
    height: 100px;
    width: 100%;
    border: 1px solid pink;
    border-bottom: 1px solid grey;
    margin-bottom: 1em;
    display: flex;
    align-items: flex-start;
    gap: 1em;
    padding: 0.5em;
}

.checkBoxWrapper {
    height: 25px;
    width: 25px;
    background-color: rgb(255, 0, 0, 0.1);
    border: 2px solid red;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}

.checkBox {
    appearance: none;
    -webkit-appearance: none;
    content: url(icons/redCheck.svg);
    height: 100%;
    opacity: 0;
    transition: opacity 0.25s;
}

.checkBox:hover {
    opacity: 1;
}

@keyframes example {
    from {height: 150%;}
    to {height: 100%;}
}

.checkBox:checked {
    background-color: red;
    transition: 0.5s;
    border-radius: 50%;
    opacity: 1;
    animation-name: example;
    animation-duration: 0.5s;
}

.paraBox {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
}